---
const LANGUAGES = [
	{
		name: 'English',
		code: 'en'
	},
	{
		name: 'Español',
		code: 'es'
	}
]
const { currentLocale } = Astro;
---

<div>
	<div class="dropdown">
	  <button id="select-language"type="button">{currentLocale === 'en' ? 'English' : 'Español' }</button>
	  <ul id="button-list" >
		{
			LANGUAGES.map(({name, code}) => {
				return (
					<li class={`${code} ${currentLocale === 'en' && code === 'en' ? 'selected' : currentLocale === 'es' && code === 'es' ? 'selected' : '' }`}>
						<a href={code === 'es' ? `/${code}` : '/'}>{name}</a>
					</li>
				)
			})
		}
	  </ul>
	</div>
</div>

<script>
	const button = document.getElementById('select-language');
	const list = document.getElementById('button-list');

	button.addEventListener('click', () => {
		list.classList.toggle('show');
	})
</script>

<style>
	div {
		display: flex;
		align-items: center;
		justify-content: center;
		flex-direction: column;
		position: relative;
	}

	.dropdown {
		display: flex;
		gap: 1em;
	}

	button {
		padding: 0.5em;
		background-color: var(--background-400);
		border-radius: 10px;
		border: 3px var(--background-950) solid;
		color: var(--background-950);
		font: inherit;
		width: 100%
		
	}

	ul {
		display: none;
		align-items: center;
		justify-content: center;
		flex-direction: column;
		position: absolute;
		top: 3em;
		background-color: var(--background-300);
		color: var(--background-950);
		border-radius: 10px;
		border: 3px var(--background-950) solid;
		overflow: hidden;
	}

	li {
		width: 100%;
		text-align: center;
		padding: 0.2em;
	}
	
	.selected {
		background-color: var(--background-500);
		pointer-events: none;
	}

	ul.show {
		display: flex;
	}

	li:hover {
		background-color: var(--background-500);
	}

	@media (width <= 700px) {

	}

</style>
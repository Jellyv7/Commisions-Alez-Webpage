---
import { Language } from "@icons";

const LANGUAGES = [
	{
		name: "English",
		code: "en",
	},
	{
		name: "Espa√±ol",
		code: "es",
	},
];
const { currentLocale } = Astro;
---

<div>
	<div class="dropdown">
		<button id="select-language" class="selection" type="button"
			><Language /></button
		>
		<ul id="button-list" class="button">
			{
				LANGUAGES.map(({ name, code }) => {
					return (
						<li
							class={`${code} ${currentLocale === "en" && code === "en" ? "selected" : currentLocale === "es" && code === "es" ? "selected" : ""}`}
						>
							<a href={code === "es" ? `/${code}` : "/"}>
								{name}
							</a>
						</li>
					);
				})
			}
		</ul>
	</div>
</div>

<script>
	const button = document.getElementById("select-language");
	const dropdown = document.querySelector(".dropdown");
	const list = document.getElementById('button-list');
	const options = document.querySelectorAll('#button-list > li > a');
	const optionList = [...options];

	button.addEventListener("click", () => {
		list.classList.toggle("show");
	});

	optionList.forEach(elem => {
		elem.addEventListener('click', () => {
			list.classList.toggle("show");
		})
	})

	const handleDropdown = e => {
		const currentElement = e.target;

		if (!dropdown.contains(currentElement) && list.classList.contains('show')) list.classList.remove("show");
	};
	document.addEventListener("click", handleDropdown);
</script>

<style>
	div {
		display: flex;
		align-items: center;
		justify-content: center;
		flex-direction: column;
		position: relative;
	}

	.dropdown {
		display: flex;
		gap: 1em;
	}

	button {
		padding: 0.2em;
		background-color: var(--background-400);
		color: var(--background-950);
		font: inherit;
		border: unset;
	}

	ul {
		display: none;
		align-items: center;
		justify-content: center;
		flex-direction: column;
		position: absolute;
		top: 2.2em;
		right: 0;
		background-color: var(--background-300);
		color: var(--background-950);
		border-radius: 10px;
		border: 3px var(--background-950) solid;
		overflow: hidden;
		box-shadow: var(--shadow-elevation-medium);
	}

	li {
		width: 100%;
		text-align: center;
		padding: 0.2em;
	}

	.selected {
		background-color: var(--background-500);
		pointer-events: none;
	}

	ul.show {
		display: flex;
		z-index: 1000;
	}

	li:hover {
		background-color: var(--background-500);
	}

	@media (width <= 700px) {
		button {
			padding: unset;
		}

		ul {
			top: 1.5em;
			border: 1px var(--background-950) solid;
			border-radius: 6px;
		}

		li {
			font-size: 0.6rem;
		}
	}
</style>
